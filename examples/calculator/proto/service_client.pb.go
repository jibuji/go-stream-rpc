// Code generated by stream-rpc. DO NOT EDIT.
package proto

import (
	rpc "stream-rpc"
)

type CalculatorClient struct {
	peer *rpc.RpcPeer
}

func NewCalculatorClient(peer *rpc.RpcPeer) *CalculatorClient {
	return &CalculatorClient{peer: peer}
}

func (c *CalculatorClient) Add(req *AddRequest) (*AddResponse, error) {
	resp := &AddResponse{}
	err := c.peer.Call("Calculator.Add", req, resp)
	if err != nil {
		return nil, err
	}
	return resp, nil
}

func (c *CalculatorClient) Multiply(req *MultiplyRequest) (*MultiplyResponse, error) {
	resp := &MultiplyResponse{}
	err := c.peer.Call("Calculator.Multiply", req, resp)
	if err != nil {
		return nil, err
	}
	return resp, nil
}
